"""empty message

Revision ID: 19e8725e0581
Revises: 56189bfb2c5f
Create Date: 2018-04-07 11:55:43.084495

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, relationship


# revision identifiers, used by Alembic.
revision = '19e8725e0581'
down_revision = '56189bfb2c5f'
branch_labels = None
depends_on = None


Session = sessionmaker()

Base = declarative_base()


class PullMirror(Base):
    __tablename__ = 'pull_mirror'

    id = sa.Column(sa.Integer, primary_key=True)
    project_name = sa.Column(sa.String(255))
    gitlab_id = sa.Column(sa.Integer)
    project_id = sa.Column(sa.Integer, sa.ForeignKey('project.id'), nullable=False)

    project = relationship('Project', backref='pull_mirror')


class Project(Base):
    __tablename__ = 'project'

    id = sa.Column(sa.Integer, primary_key=True)
    name = sa.Column(sa.String, nullable=False, unique=True)
    gitlab_id = sa.Column(sa.Integer)


def upgrade():
    bind = op.get_bind()
    session = Session(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gitlab_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('name_with_namespace', sa.String(length=255), nullable=True),
    sa.Column('web_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gitlab_id')
    )
    op.create_table('push_mirror',
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('target', sa.String(length=255), nullable=True),
    sa.Column('foreign_vcs_type', sa.Integer(), nullable=True),
    sa.Column('last_sync', sa.DateTime(), nullable=True),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('hook_token', sa.String(length=255), nullable=True),
    sa.Column('is_force_update', sa.Boolean(), nullable=True),
    sa.Column('is_prune_mirrors', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_mirror', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_push_mirror_project_id'), 'push_mirror', ['project_id'], unique=False)
    op.create_index(op.f('ix_push_mirror_user_id'), 'push_mirror', ['user_id'], unique=False)
    op.add_column('pull_mirror', sa.Column('project_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_pull_mirror_project_id'), 'pull_mirror', ['project_id'], unique=False)
    op.create_foreign_key(None, 'pull_mirror', 'project', ['project_id'], ['id'])

    # Migrate dropped gitlab_id to project_id

    for pull_mirror in session.query(PullMirror):
        found_project = session.query(Project).filter_by(gitlab_id=pull_mirror.gitlab_id).first()
        if not found_project:
            found_project = Project()
            found_project.gitlab_id = pull_mirror.gitlab_id
            found_project.name = pull_mirror.project_name
            session.add(found_project)
            session.commit()

        pull_mirror.project_id = found_project.id

        session.add(pull_mirror)
    session.commit()

    op.drop_column('pull_mirror', 'gitlab_id')
    # ### end Alembic commands ###


def downgrade():
    bind = op.get_bind()
    session = Session(bind=bind)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pull_mirror', sa.Column('gitlab_id', sa.INTEGER(), nullable=True))

    for pull_mirror in session.query(PullMirror):
        pull_mirror.gitlab_id = pull_mirror.project.gitlab_id
        session.add(pull_mirror)
    session.commit()

    op.drop_constraint(None, 'pull_mirror', type_='foreignkey')
    op.drop_index(op.f('ix_pull_mirror_project_id'), table_name='pull_mirror')
    op.drop_column('pull_mirror', 'project_id')
    op.drop_index(op.f('ix_push_mirror_user_id'), table_name='push_mirror')
    op.drop_index(op.f('ix_push_mirror_project_id'), table_name='push_mirror')
    op.drop_table('push_mirror')
    op.drop_table('project')
    # ### end Alembic commands ###
